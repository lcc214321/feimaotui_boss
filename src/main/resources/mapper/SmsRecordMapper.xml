<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.egg.mapper.SmsRecordMapper">

  <resultMap id="BaseResultMap" type="org.egg.model.DO.SmsRecord">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="sms_type" jdbcType="VARCHAR" property="smsType" />
    <result column="sms_content" jdbcType="VARCHAR" property="smsContent" />
    <result column="sms_template_id" jdbcType="VARCHAR" property="smsTemplateId" />
    <result column="sms_phone" jdbcType="VARCHAR" property="smsPhone" />
    <result column="sms_status" jdbcType="VARCHAR" property="smsStatus" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="modified_date" jdbcType="TIMESTAMP" property="modifiedDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sms_type, sms_content, sms_template_id, sms_phone, sms_status, created_date, 
    modified_date
  </sql>
  <select id="selectByExample" parameterType="org.egg.model.DO.SmsRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sms_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="start!=null">
      limit #{start},#{end}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.egg.model.DO.SmsRecordExample">
    delete from sms_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.egg.model.DO.SmsRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sms_record (sms_type, sms_content, sms_template_id, 
      sms_phone, sms_status, created_date, 
      modified_date)
    values (#{smsType,jdbcType=VARCHAR}, #{smsContent,jdbcType=VARCHAR}, #{smsTemplateId,jdbcType=VARCHAR}, 
      #{smsPhone,jdbcType=VARCHAR}, #{smsStatus,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{modifiedDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.egg.model.DO.SmsRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sms_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="smsType != null">
        sms_type,
      </if>
      <if test="smsContent != null">
        sms_content,
      </if>
      <if test="smsTemplateId != null">
        sms_template_id,
      </if>
      <if test="smsPhone != null">
        sms_phone,
      </if>
      <if test="smsStatus != null">
        sms_status,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="modifiedDate != null">
        modified_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="smsType != null">
        #{smsType,jdbcType=VARCHAR},
      </if>
      <if test="smsContent != null">
        #{smsContent,jdbcType=VARCHAR},
      </if>
      <if test="smsTemplateId != null">
        #{smsTemplateId,jdbcType=VARCHAR},
      </if>
      <if test="smsPhone != null">
        #{smsPhone,jdbcType=VARCHAR},
      </if>
      <if test="smsStatus != null">
        #{smsStatus,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.egg.model.DO.SmsRecordExample" resultType="java.lang.Integer">
    select count(*) from sms_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sms_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.smsType != null">
        sms_type = #{record.smsType,jdbcType=VARCHAR},
      </if>
      <if test="record.smsContent != null">
        sms_content = #{record.smsContent,jdbcType=VARCHAR},
      </if>
      <if test="record.smsTemplateId != null">
        sms_template_id = #{record.smsTemplateId,jdbcType=VARCHAR},
      </if>
      <if test="record.smsPhone != null">
        sms_phone = #{record.smsPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.smsStatus != null">
        sms_status = #{record.smsStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedDate != null">
        modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sms_record
    set id = #{record.id,jdbcType=BIGINT},
      sms_type = #{record.smsType,jdbcType=VARCHAR},
      sms_content = #{record.smsContent,jdbcType=VARCHAR},
      sms_template_id = #{record.smsTemplateId,jdbcType=VARCHAR},
      sms_phone = #{record.smsPhone,jdbcType=VARCHAR},
      sms_status = #{record.smsStatus,jdbcType=VARCHAR},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>