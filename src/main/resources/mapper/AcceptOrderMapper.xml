<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.egg.mapper.AcceptOrderDAO">
  <resultMap id="BaseResultMap" type="org.egg.model.DO.AcceptOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="pub_order_no" jdbcType="VARCHAR" property="pubOrderNo" />
    <result column="time_delay" jdbcType="TIMESTAMP" property="timeDelay" />
    <result column="cancel_reason" jdbcType="VARCHAR" property="cancelReason" />
    <result column="amout" jdbcType="DECIMAL" property="amout" />
    <result column="pub_price" jdbcType="DECIMAL" property="pubPrice" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="finished_date" jdbcType="TIMESTAMP" property="finishedDate" />
    <result column="mofied_date" jdbcType="TIMESTAMP" property="mofiedDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_no, user_no, pub_order_no, time_delay, cancel_reason, amout, pub_price, 
    status, created_date, finished_date, mofied_date
  </sql>
  <select id="selectByExample" parameterType="org.egg.model.DO.AcceptOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from accept_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="start!=null">
      limit #{start},#{end}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from accept_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from accept_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.egg.model.DO.AcceptOrderExample">
    delete from accept_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.egg.model.DO.AcceptOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into accept_order (order_no, user_no, pub_order_no, 
      time_delay, cancel_reason, amout, 
      pub_price, status, created_date, 
      finished_date, mofied_date)
    values (#{orderNo,jdbcType=VARCHAR}, #{userNo,jdbcType=VARCHAR}, #{pubOrderNo,jdbcType=VARCHAR}, 
      #{timeDelay,jdbcType=TIMESTAMP}, #{cancelReason,jdbcType=VARCHAR}, #{amout,jdbcType=DECIMAL}, 
      #{pubPrice,jdbcType=DECIMAL}, #{status,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{finishedDate,jdbcType=TIMESTAMP}, #{mofiedDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.egg.model.DO.AcceptOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into accept_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="userNo != null">
        user_no,
      </if>
      <if test="pubOrderNo != null">
        pub_order_no,
      </if>
      <if test="timeDelay != null">
        time_delay,
      </if>
      <if test="cancelReason != null">
        cancel_reason,
      </if>
      <if test="amout != null">
        amout,
      </if>
      <if test="pubPrice != null">
        pub_price,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="finishedDate != null">
        finished_date,
      </if>
      <if test="mofiedDate != null">
        mofied_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userNo != null">
        #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="pubOrderNo != null">
        #{pubOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="timeDelay != null">
        #{timeDelay,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelReason != null">
        #{cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="amout != null">
        #{amout,jdbcType=DECIMAL},
      </if>
      <if test="pubPrice != null">
        #{pubPrice,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="finishedDate != null">
        #{finishedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="mofiedDate != null">
        #{mofiedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.egg.model.DO.AcceptOrderExample" resultType="java.lang.Integer">
    select count(*) from accept_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update accept_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userNo != null">
        user_no = #{record.userNo,jdbcType=VARCHAR},
      </if>
      <if test="record.pubOrderNo != null">
        pub_order_no = #{record.pubOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.timeDelay != null">
        time_delay = #{record.timeDelay,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cancelReason != null">
        cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="record.amout != null">
        amout = #{record.amout,jdbcType=DECIMAL},
      </if>
      <if test="record.pubPrice != null">
        pub_price = #{record.pubPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishedDate != null">
        finished_date = #{record.finishedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mofiedDate != null">
        mofied_date = #{record.mofiedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update accept_order
    set id = #{record.id,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      user_no = #{record.userNo,jdbcType=VARCHAR},
      pub_order_no = #{record.pubOrderNo,jdbcType=VARCHAR},
      time_delay = #{record.timeDelay,jdbcType=TIMESTAMP},
      cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
      amout = #{record.amout,jdbcType=DECIMAL},
      pub_price = #{record.pubPrice,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=VARCHAR},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      finished_date = #{record.finishedDate,jdbcType=TIMESTAMP},
      mofied_date = #{record.mofiedDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.egg.model.DO.AcceptOrder">
    update accept_order
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userNo != null">
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="pubOrderNo != null">
        pub_order_no = #{pubOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="timeDelay != null">
        time_delay = #{timeDelay,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelReason != null">
        cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="amout != null">
        amout = #{amout,jdbcType=DECIMAL},
      </if>
      <if test="pubPrice != null">
        pub_price = #{pubPrice,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="finishedDate != null">
        finished_date = #{finishedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="mofiedDate != null">
        mofied_date = #{mofiedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.egg.model.DO.AcceptOrder">
    update accept_order
    set order_no = #{orderNo,jdbcType=VARCHAR},
      user_no = #{userNo,jdbcType=VARCHAR},
      pub_order_no = #{pubOrderNo,jdbcType=VARCHAR},
      time_delay = #{timeDelay,jdbcType=TIMESTAMP},
      cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      amout = #{amout,jdbcType=DECIMAL},
      pub_price = #{pubPrice,jdbcType=DECIMAL},
      status = #{status,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      finished_date = #{finishedDate,jdbcType=TIMESTAMP},
      mofied_date = #{mofiedDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>